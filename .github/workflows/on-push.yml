name: Lint and Test (Push)

on:
  push:
    branches:
      - '**'  # Run on push to any branch

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:8.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MongoDB and create test user
      env:
        MONGODB_USER: ${{ secrets.MONGODB_USER }}
        MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      run: |
        # Wait for MongoDB to be ready
        timeout 60 bash -c 'until mongosh --eval "db.adminCommand({ping: 1})" --quiet; do sleep 2; done'

        # Create database and user for tests
        mongosh admin --eval "
          db.createUser({
            user: '$MONGODB_USER',
            pwd: '$MONGODB_PASSWORD',
            roles: [{role: 'readWrite', db: 'aac'}]
          })
        "

        # Verify connection
        mongosh -u "$MONGODB_USER" -p "$MONGODB_PASSWORD" --authenticationDatabase admin aac --eval "db.createCollection('animals')"

    - name: Run ruff linter
      run: |
        ruff check .
      continue-on-error: false  # Fail the build if linting fails

    - name: Run unit tests
      run: |
        python -m unittest discover -s tests -p "test_*.py" -v
